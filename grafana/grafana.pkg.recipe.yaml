Comment: Create a package to deploy grafana to /usr/local/bin/grafana-version, then
    use a postinstall script to create a symlink
    Usage Note- The user will need to cd  into the grafana directory and run 
    ./bin/grafana-server web  to start the service
Identifier: com.github.daz-recipes.pkg.grafana
ParentRecipe: com.github.daz-recipes.download.grafana
MinimumVersion: '2.3'

Input:
  NAME: grafana
  PKG_ID: com.grafana.grafana
  
Process:
- Processor: com.github.homebysix.VersionSplitter/VersionSplitter
  Arguments:
    split_on: "grafana-"
    version: '%match%'
    index: 1
    
- Processor: com.github.homebysix.VersionSplitter/VersionSplitter
  Arguments:
    split_on: ".darwin-amd64.tar.gz"
    version: '%version%'
    index: 0

- Processor: Unarchiver
  Arguments:
        archive_path: '%pathname%'
        destination_path: '%RECIPE_CACHE_DIR%/unpack'
        purge_destination: true 

- Processor: PkgRootCreator
  Arguments:
    pkgdirs: 
         root: "0755"
         root/usr: "0755"
         root/usr/local/: "0755"
         root/usr/local/bin/: "0755" 
         scripts: "0755"
    pkgroot: '%RECIPE_CACHE_DIR%/%NAME%'

- Processor: Copier
  Arguments:
    source_path: '%RECIPE_CACHE_DIR%/unpack/%NAME%-%version%'
    destination_path: '%pkgroot%/root/usr/local/bin/%NAME%-%version%'
    overwrite: true

- Processor: FileCreator
  Arguments:
      file_path: "%pkgroot%/scripts/postinstall"
      file_mode: "0755"
      file_content: |
        #!/bin/zsh
        
        # This script will create a symlink to link the grafana directory to
        # /usr/local/bin/grafana and add a data folder as needed
        
        if [[ -a /usr/local/bin/grafana ]]; then
            /bin/rm /usr/local/bin/grafana
        fi
        /bin/ln -s /usr/local/bin/%NAME%-%version% /usr/local/bin/grafana
        
        /bin/mkdir /usr/local/bin/%NAME%-%version%/data
        /usr/sbin/chown -R root:staff /usr/local/bin/%NAME%-%version%/data
        /bin/chmod -R 775 /usr/local/bin/%NAME%-%version%/data
        exit

- Processor: PkgCreator
  Arguments:
    pkg_request: 
        chown:
          - group: wheel
            mode: "0755"
            path: 'usr/local/bin/%NAME%-%version%'
            user: root
          - group: wheel
            mode: "0755"
            path: 'usr'
            user: root          
        id: "%PKG_ID%"
        options: purge_ds_store
        pkgname: "%NAME%-%version%"
        pkgroot: "%RECIPE_CACHE_DIR%/%NAME%/root"
        scripts: "%RECIPE_CACHE_DIR%/%NAME%/scripts"
        version: "%version%"

- Processor: PathDeleter
  Arguments:
    path_list: 
      - '%RECIPE_CACHE_DIR%/%NAME%/root/usr/local/bin/%NAME%-%version%/public/app'
      - '%RECIPE_CACHE_DIR%/%NAME%'
      - '%RECIPE_CACHE_DIR%/unpack/%NAME%-%version%/public/app'      
      - '%RECIPE_CACHE_DIR%/unpack/%NAME%-%version%/public/img/icons'
      - '%RECIPE_CACHE_DIR%/unpack/%NAME%-%version%'
      - '%RECIPE_CACHE_DIR%/unpack'
